name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      # Add npm cache
      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "18"

      - name: Install Dependencies
        run: npm ci

      - name: Build Test
        run: npm run build
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
          NEXT_PUBLIC_BASE_URL: ${{ secrets.PRODUCTION_URL }}

  deploy:
    needs: build-test
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd chatgenius
            git pull
            export SKIP_TYPE_CHECK=1
            export NODE_ENV=production

            # Install dependencies without dev dependencies
            npm ci --only=production

            # Build without type checking
            NEXT_SKIP_TYPECHECK=1 npm run build

            # Restart PM2 with error handling
            if pm2 restart chatgenius-nichnarmada; then
              echo "PM2 restart successful"
            else
              echo "PM2 restart failed"
              pm2 delete chatgenius-nichnarmada
              pm2 start npm --name "chatgenius-nichnarmada" -- start
              pm2 save
            fi
